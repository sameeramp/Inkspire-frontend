{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { register, login, logout } from \"./authService.\";\n\n// Get user from localStorage\nconst user = JSON.parse(localStorage.getItem(\"user\"));\nconst initialState = {\n  user: user ? user : null,\n  token: \"\",\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: \"\"\n};\n\n// Register user\nexport const signup = createAsyncThunk(\"auth/register\", async (user, thunkAPI) => {\n  try {\n    return await register(user);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\n// Login user\nexport const signin = createAsyncThunk(\"auth/login\", async (user, thunkAPI) => {\n  try {\n    return await login(user);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const signout = createAsyncThunk(\"auth/logout\", async () => {\n  await logout();\n});\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    reset: state => {\n      state.user = null;\n      state.isError = false;\n      state.isLoading = false;\n      state.isSuccess = false;\n      state.message = \"\";\n      state.token = \"\";\n    },\n    setUser: (state, {\n      payload\n    }) => {\n      state.uesr = payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(signup.pending, state => {\n      state.isLoading = true;\n    }).addCase(signup.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    }).addCase(signup.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n      state.user = null;\n    }).addCase(signin.pending, state => {\n      state.isLoading = true;\n    }).addCase(signin.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n      state.token = user;\n    }).addCase(signin.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n      state.user = null;\n    }).addCase(signout.fulfilled, state => {\n      state.user = null;\n      state.token = \"\";\n    });\n  }\n});\nexport const {\n  reset,\n  setUser\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","register","login","logout","user","JSON","parse","localStorage","getItem","initialState","token","isError","isSuccess","isLoading","message","signup","thunkAPI","error","response","data","toString","rejectWithValue","signin","signout","authSlice","name","reducers","reset","state","setUser","payload","uesr","extraReducers","builder","addCase","pending","fulfilled","action","rejected","actions","reducer"],"sources":["/home/sameeramp/Videos/Blogger/Blogger_Frontend/src/features/auth/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { register, login, logout } from \"./authService.\";\n\n// Get user from localStorage\nconst user = JSON.parse(localStorage.getItem(\"user\"));\n\nconst initialState = {\n  user: user ? user : null,\n  token: \"\",\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: \"\",\n};\n\n// Register user\nexport const signup = createAsyncThunk(\n  \"auth/register\",\n  async (user, thunkAPI) => {\n    try {\n      return await register(user);\n    } catch (error) {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n      return thunkAPI.rejectWithValue(message);\n    }\n  }\n);\n\n// Login user\nexport const signin = createAsyncThunk(\"auth/login\", async (user, thunkAPI) => {\n  try {\n    return await login(user);\n  } catch (error) {\n    const message =\n      (error.response && error.response.data && error.response.data.message) ||\n      error.message ||\n      error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n\nexport const signout = createAsyncThunk(\"auth/logout\", async () => {\n  await logout();\n});\n\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    reset: (state) => {\n      state.user = null;\n      state.isError = false;\n      state.isLoading = false;\n      state.isSuccess = false;\n      state.message = \"\";\n      state.token = \"\";\n    },\n    setUser: (state, { payload }) => {\n      state.uesr = payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(signup.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(signup.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.isSuccess = true;\n        state.user = action.payload;\n      })\n      .addCase(signup.rejected, (state, action) => {\n        state.isLoading = false;\n        state.isError = true;\n        state.message = action.payload;\n        state.user = null;\n      })\n      .addCase(signin.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(signin.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.isSuccess = true;\n        state.user = action.payload;\n        state.token = user;\n      })\n      .addCase(signin.rejected, (state, action) => {\n        state.isLoading = false;\n        state.isError = true;\n        state.message = action.payload;\n        state.user = null;\n      })\n      .addCase(signout.fulfilled, (state) => {\n        state.user = null;\n        state.token = \"\";\n      });\n  },\n});\n\nexport const { reset, setUser } = authSlice.actions;\nexport default authSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}