{"ast":null,"code":"import axios from \"axios\";\nexport const apiHandler = async (requestData = {}, token = \"\", type = \"\", baseUrl, middleUrl, page, param1 = \"\", param2 = \"\", param3 = \"\") => {\n  const url = `${baseUrl}${middleUrl}${page}`;\n  const HEADER_TOKEN = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  };\n  if (type === \"HOME\") return await axios.get(`${url}/:${param1}/:${param2}/:${param3}`);else if (type === \"CONTACT\") return await axios.post(`${url}`, requestData);else if (type === \"CREATE_BLOG\") return await axios.post(`${url}`, requestData, HEADER_TOKEN);else if (type === \"UPDATE_BLOG\") return await axios.put(`${url}/${param1}`, requestData, HEADER_TOKEN);else if (type === \"GET_BLOG\") return await axios.get(`${url}/:${param1}/:${param2}`, HEADER_TOKEN);else if (type === \"DELETE_BLOG\") return await axios.delete(`${url}/:${param1}`, HEADER_TOKEN);else if (type === \"AUTHOR_BLOGS\" || type === \"GET_ONE_BLOG\") return await axios.get(`${url}/:${param1}`, HEADER_TOKEN);else if (type === \"MEDIA\") return await axios.get(`${url}/:${param1}/:${param2}`);\n};","map":{"version":3,"names":["axios","apiHandler","requestData","token","type","baseUrl","middleUrl","page","param1","param2","param3","url","HEADER_TOKEN","headers","Authorization","get","post","put","delete"],"sources":["/home/sameeramp/Videos/Inkspire-frontend/src/components/shared/utils/apiHandler.js"],"sourcesContent":["import axios from \"axios\";\n\nexport const apiHandler = async (\n  requestData = {},\n  token = \"\",\n  type = \"\",\n  baseUrl,\n  middleUrl,\n  page,\n  param1 = \"\",\n  param2 = \"\",\n  param3 = \"\"\n) => {\n  const url = `${baseUrl}${middleUrl}${page}`;\n  const HEADER_TOKEN = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n  };\n\n  if (type === \"HOME\")\n    return await axios.get(`${url}/:${param1}/:${param2}/:${param3}`);\n  else if (type === \"CONTACT\") return await axios.post(`${url}`, requestData);\n  else if (type === \"CREATE_BLOG\")\n    return await axios.post(`${url}`, requestData, HEADER_TOKEN);\n  else if (type === \"UPDATE_BLOG\")\n    return await axios.put(`${url}/${param1}`, requestData, HEADER_TOKEN);\n  else if (type === \"GET_BLOG\")\n    return await axios.get(`${url}/:${param1}/:${param2}`, HEADER_TOKEN);\n  else if (type === \"DELETE_BLOG\")\n    return await axios.delete(`${url}/:${param1}`, HEADER_TOKEN);\n  else if (type === \"AUTHOR_BLOGS\" || type === \"GET_ONE_BLOG\")\n    return await axios.get(`${url}/:${param1}`, HEADER_TOKEN);\n  else if (type === \"MEDIA\")\n    return await axios.get(`${url}/:${param1}/:${param2}`);\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,UAAU,GAAG,MAAAA,CACxBC,WAAW,GAAG,CAAC,CAAC,EAChBC,KAAK,GAAG,EAAE,EACVC,IAAI,GAAG,EAAE,EACTC,OAAO,EACPC,SAAS,EACTC,IAAI,EACJC,MAAM,GAAG,EAAE,EACXC,MAAM,GAAG,EAAE,EACXC,MAAM,GAAG,EAAE,KACR;EACH,MAAMC,GAAG,GAAI,GAAEN,OAAQ,GAAEC,SAAU,GAAEC,IAAK,EAAC;EAC3C,MAAMK,YAAY,GAAG;IACnBC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCC,aAAa,EAAG,UAASX,KAAM;IACjC;EACF,CAAC;EAED,IAAIC,IAAI,KAAK,MAAM,EACjB,OAAO,MAAMJ,KAAK,CAACe,GAAG,CAAE,GAAEJ,GAAI,KAAIH,MAAO,KAAIC,MAAO,KAAIC,MAAO,EAAC,CAAC,CAAC,KAC/D,IAAIN,IAAI,KAAK,SAAS,EAAE,OAAO,MAAMJ,KAAK,CAACgB,IAAI,CAAE,GAAEL,GAAI,EAAC,EAAET,WAAW,CAAC,CAAC,KACvE,IAAIE,IAAI,KAAK,aAAa,EAC7B,OAAO,MAAMJ,KAAK,CAACgB,IAAI,CAAE,GAAEL,GAAI,EAAC,EAAET,WAAW,EAAEU,YAAY,CAAC,CAAC,KAC1D,IAAIR,IAAI,KAAK,aAAa,EAC7B,OAAO,MAAMJ,KAAK,CAACiB,GAAG,CAAE,GAAEN,GAAI,IAAGH,MAAO,EAAC,EAAEN,WAAW,EAAEU,YAAY,CAAC,CAAC,KACnE,IAAIR,IAAI,KAAK,UAAU,EAC1B,OAAO,MAAMJ,KAAK,CAACe,GAAG,CAAE,GAAEJ,GAAI,KAAIH,MAAO,KAAIC,MAAO,EAAC,EAAEG,YAAY,CAAC,CAAC,KAClE,IAAIR,IAAI,KAAK,aAAa,EAC7B,OAAO,MAAMJ,KAAK,CAACkB,MAAM,CAAE,GAAEP,GAAI,KAAIH,MAAO,EAAC,EAAEI,YAAY,CAAC,CAAC,KAC1D,IAAIR,IAAI,KAAK,cAAc,IAAIA,IAAI,KAAK,cAAc,EACzD,OAAO,MAAMJ,KAAK,CAACe,GAAG,CAAE,GAAEJ,GAAI,KAAIH,MAAO,EAAC,EAAEI,YAAY,CAAC,CAAC,KACvD,IAAIR,IAAI,KAAK,OAAO,EACvB,OAAO,MAAMJ,KAAK,CAACe,GAAG,CAAE,GAAEJ,GAAI,KAAIH,MAAO,KAAIC,MAAO,EAAC,CAAC;AAC1D,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}